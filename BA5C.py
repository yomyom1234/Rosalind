import rosalind
import sys
sys.setrecursionlimit(10000000)

def LCSBackTrack(v, w):
	len_v = len(v)
	len_w = len(w)
	s = [[0 for i in range(len_w + 1)] for j in range(len_v + 1)]
	backtrack = [["O" for i in range(len_w + 1)] for j in range(len_v + 1)]
	for i in range(len_v):
		s[i][0] = 0
	for j in range(len_w):
		s[0][j] = 0
	for i in range(1, len_v + 1):
		for j in range(1, len_w + 1):
			match = 0
			if v[i - 1] == w[j - 1]:
				match = 1
			s[i][j] = max(s[i - 1][j], s[i][j - 1], s[i - 1][j - 1] + match)
			if s[i][j] == s[i][j - 1]:
				backtrack[i][j] = "R"
			elif s[i][j] == s[i - 1][j - 1] + match:
				backtrack[i][j] = "X"
			elif s[i][j] == s[i - 1][j]:
				backtrack[i][j] = "D"
	return (backtrack)

def OutputLCS(backtrack, v, i ,j):
	if i == 0 or j == 0:
		return ""
	if backtrack[i][j] == "D":
		return OutputLCS(backtrack, v, i - 1, j)
	elif backtrack[i][j] == "R":
		return OutputLCS(backtrack, v, i, j - 1)
	elif backtrack[i][j] == "X":
		return OutputLCS(backtrack, v, i - 1, j - 1) + v[i - 1]
	else:
		return ""


v = "GCAGACAATTTGCCTTGAAGAGAAAACCTTCCGCCAAGACTTTTCTAACGACTCGTACATAGGGGTAACTCCTAAATCGGCAGATTGGTGTGGTGGTGCTATAAAGGCCGGTCAGGCGTTTTGGATCCGCAATTGCTAATGATAGTCTGACAACCCACGAGCGTACCTGCGATATCCCGTCATATGAATTTTATGACTTCGCAGCAGGGCATGCCGTCGAAGTTATGTACGTACAACAACTACGGCTGAGATTACATTGTTGTGGGTAAATCTTGACACGGCCAGTGTTTTGACCAGGGTGGGGAGTGTACCGTGTACAGGTATTGGGCTCTAGGGCGCGTAGGACTAGTGATTTAACAACGCCGTTTGTCCACGCTGACCGCGCACGCCATAACTCGGGAAGGAGGCACCATTATCAACGTCGGCGATGTATATACGGGAGACAGGAGCTTGTGCACGAGTGAAGGTGGAATGCTTATTTAGATGAGACGTACGGGTTTGAACTAGTTATACGCACCGTTCAGCGACGGATCGTTGGTGCGTTTTCCTGGGCAAAAGAGGCGCCTACTGTATGCTAATGCTTGAAAGCTGATCCGTGACACAAGAGCCTTTGAAGAGACATATCTCACGGTCTCAGGGGCAGGTCCACCGAGTAGTTACCGCACTACTTACTCAAATTCATCGTAAAGACCGTGAACATACCCAATCCGTAGCATATCGAATCCCGTGTTGAAGGTCCTCGAAAGGTATTCCCGTAGCGTCTCAGGCTCCAACAAGACCGTGAGTTAGAAGGCATTATGGAGCAGGTTCGGCGGCCCACTACTAAGGTGCTCAGTTAGCGGATATTGCA"
w = "GGTGTGCCCTGGCGGATTTCATTAATGCAGCCAGTATATGCCGTCGCAGACTATAGACGAATCAAGAGTGAGAGTTCCCGCATCCGCTGGCCGAAACATTCGATTTACACATTGGCACGGAACCCAGCATAAAAATTCCTCATTTCAGCTACATGGCGTCTTCTCCAGCGGTTCATCGCCAGTCGATCTTCTGCGCCACTGTCTCTATAGAAGGCTTACTCAAAGGAAGTGATGGTCATTACTGCATGGAGTCTATCGCACTTGTAGTTAAATTGCAAAATGTCCAAAAATGACGAAGGAAGGCCTTTAGTAAACGTCTGTAAATAGCATGGCGCATGCGAACAGGACGGACATTCTTGCACGGCGCCGTAGGGTGGCGGTACCCTGCCCGGGTACTACTATTTATCGCTAGGAATAGGGTCATCTATACAGTGGAAAGAAGTACGACACATTCTTTTCGCCGGATTGAGTACTGCATCGGGGGCAGGATCGCTGCTCTATAACGAGGACCGCATCAGTCCTAATAGGCTTAAGCGACTGAACGTTGCCGTGACTCTGGGAGGGGTCTTGAGTGGGCGCCCGCCAGCATTGGAGGTCTTAACGGAACCCCTGTGGGTATCCTTCTTGGGTTAGGGCTGGTTGATCTCGACTACTTACCTCTGTCAAGTACAGTTGCCGAGCTTATGCCCCTGTGGATCGTCGAAACTTGTTGTTGTCTAGGTACAGAGGCATATGTCCGAGTTATACACCTATGCTTTGCTAGTCCGTCATTGCACTGATCCCCCCGGGTGCAGCATGCACTGCCGGGCGCCCGGGCTATTTGTGCGGCCGGTGAGGATGATCGTGATTATACGGTAACCCGGTTACGTCCCATGGGTTATGGCGAACCCTGTGTCAGGAGCGTGCGCGCTTCAAGTACCTCTTACGGCGCGCGACCCAGCATTGTGCGCTCAAGAGTGTACCTAGACTT"
back = LCSBackTrack(v, w)
Output = OutputLCS(back, v, len(v), len(w))

print(Output)
